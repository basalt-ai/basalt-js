{"code":"","references":["/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/contract.ts","/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/utils.ts"],"dts":{"name":"/Users/guillaumemarquis/code/basalt/packages/js-sdk/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/lib/api.d.ts","writeByteOrderMark":false,"text":"import type { AsyncResult, IApi, IEndpoint, INetworker } from './contract';\n/**\n * Helper class for interacting with the Basalt API using\n * the IEndpoint interface.\n */\nexport default class Api implements IApi {\n    private readonly root;\n    private readonly network;\n    private readonly apiKey;\n    private readonly sdkVersion;\n    private readonly sdkType;\n    constructor(root: URL, network: INetworker, apiKey: string, sdkVersion?: string, sdkType?: string);\n    /**\n     * Invokes an API endpoint\n     *\n     * @param endpoint - The endpoint to invoke\n     * @param dto - Data for the endpoint\n     * @returns A promise of the result containing the decoded response or an error\n     */\n    invoke<Input, Output>(endpoint: IEndpoint<Input, Output>, dto: Input): AsyncResult<Output>;\n    /**\n     * Builds a URL with query parameters\n     *\n     * @param pathname - The path of the URL\n     * @param queries - The query parameters to append to the URL\n     * @returns The constructed URL\n     */\n    private _buildUrl;\n    private _buildHeaders;\n}\n"}}
