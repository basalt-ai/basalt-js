{"code":"","references":["/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/contract.ts","/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/endpoints/index.ts","/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/utils.ts"],"dts":{"name":"/Users/guillaumemarquis/code/basalt/packages/js-sdk/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/lib/prompt-sdk.d.ts","writeByteOrderMark":false,"text":"import type { AsyncResult, GetPromptOptions, IApi, ICache, ILogger, IPromptSDK, PromptResponse } from './contract';\ntype NoSlugOptions = Omit<GetPromptOptions, 'slug'>;\nexport default class PromptSDK implements IPromptSDK {\n    private readonly api;\n    private readonly queryCache;\n    private readonly fallbackCache;\n    private readonly logger;\n    /**\n     * @param api - The API interface for making requests.\n     * @param queryCache - The cache used to read before making fetch requests\n     *   reducing the latency and stress on the server.\n     * @param fallbackCache - The cache used as a fallback mechanism.\n     * @param logger - The logger interface for logging information.\n     */\n    constructor(api: IApi, queryCache: ICache, fallbackCache: ICache, logger: ILogger);\n    private get cacheDuration();\n    get(slug: string, options?: NoSlugOptions): AsyncResult<PromptResponse>;\n    get(options: GetPromptOptions): AsyncResult<PromptResponse>;\n    private _getPrompt;\n    /**\n     * Inserts variables into the given prompt's text\n     *\n     * @param prompt - The prompt response (w/ raw prompt text)\n     * @param variables - A record of variables to be inserted into the prompt text\n     */\n    private _insertVariables;\n    /**\n     * Generates a cache key for the given options\n     *\n     * @param {GetPromptOptions} opts - The prompt fetch options\n     * @returns {string} The cache key for given options\n     */\n    private _makePromptCacheKey;\n}\nexport {};\n"}}
