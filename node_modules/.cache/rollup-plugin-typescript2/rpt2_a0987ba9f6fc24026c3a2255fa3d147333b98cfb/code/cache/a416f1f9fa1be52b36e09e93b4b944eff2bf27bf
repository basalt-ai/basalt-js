{"code":"","references":["/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/contract.ts"],"dts":{"name":"/Users/guillaumemarquis/code/basalt/packages/js-sdk/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/lib/utils.d.ts","writeByteOrderMark":false,"text":"import type { VariablesMap } from './contract';\nexport declare function err<T>(e: T): {\n    error: T;\n    value: null;\n};\nexport declare function ok<T>(v: T): {\n    error: null;\n    value: T;\n};\n/**\n * Replaces a variables ({{VAR_NAME}}) in a string\n *\n * @param str The string to replace variables in, ex: \"Greet {{name}}\"\n * @param variables Key-value object of variables to replace, ex: { name: \"John\" }\n * @returns A new string with variables filled in. (Not all variables may be replaced, depending on the input)\n */\nexport declare function replaceVariables(str: string, variables: VariablesMap): string;\n/**\n * Find all variables present in a string\n *\n * @param str A string with variables (ex: \"Hello {{name}}\")\n * @returns The names of the variables present in the string\n */\nexport declare function getVariableNames(str: string): string[];\nexport declare function difference<T>(setA: Set<T>, setB: Set<T>): Set<T>;\n"}}
