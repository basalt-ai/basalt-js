{"code":"","references":["/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/contract.ts","/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/errors.ts","/Users/guillaumemarquis/code/basalt/packages/js-sdk/src/lib/utils.ts"],"dts":{"name":"/Users/guillaumemarquis/code/basalt/packages/js-sdk/node_modules/.cache/rollup-plugin-typescript2/placeholder/src/lib/networker.d.ts","writeByteOrderMark":false,"text":"import type { AsyncResult, FetchMethod, FetchResponse, INetworker } from './contract';\n/**\n * Simple class to make network requests.\n */\nexport default class Networker implements INetworker {\n    /**\n     * Fetch an endpoint over network. This method never throws but returns a Result object.\n     * It is the user's responsibility to handle the error case explicitly.\n     *\n     * @param url The URL to query\n     * @param method The HTTP method to use\n     * @param body Optional request body.\n     */\n    fetch(url: URL, method: FetchMethod, body?: BodyInit, headers?: HeadersInit): AsyncResult<FetchResponse>;\n}\n"}}
